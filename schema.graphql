# events

# AssessReason
# any mainnet deployments yet or only sepolia
#  matchstick tests- no

enum CookieJarType {
  ERC20CookieJar6551
  ERC721CookieJar6551
  BaalCookieJar6551
  ListCookieJar6551
  OpenCookieJar6551
  ZodiacERC20CookieJar
  ZodiacERC721CookieJar
  ZodiacBaalCookieJar
  ZodiacListCookieJar
  ZodiacOpenCookieJar
}

# SummonCookieJar (factory) + Setup (cookie jar)
# DonationReceived
type CookieJar @entity {
  id: Bytes! # address
  name: String! # Will be "Unnamed Jar" if parsing fails
  # type: CookieJarType!
  type: String! # Will be "unknown" if parsing fails
  description: String! # Will be "" if parsing fails
  link: String! # Will be "" if parsing fails
  cookieToken: Bytes!
  cookieAmount: BigInt! # fixed amount
  periodLength: BigInt! # time limit for claiming a cookie
  owner: Bytes! # address
  target: Bytes!
  claims: [Claim!]! @derivedFrom(field: "jar")
}

# GiveCookie (on making claim)
type Claim @entity {
  id: Bytes!
  uuid: String!
  claimer: Bytes! # address
  receiver: Bytes! # address
  reason: Reason! # or bytes?
  jar: CookieJar!
  amount: BigInt!
  timestamp: BigInt!
}

type Reason @entity {
  id: Bytes!
  tag: String!
  reason: String!
  link: String!
}

type ReasonAssessment @entity {
  id: Bytes!
  claim: Claim!
  assessor: Bytes!
  assessment: Boolean!
}
